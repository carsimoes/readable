{"version":3,"sources":["components/ErrorNotFound.js","utils/api/comments.js","actions/Post/actions.js","utils/api/posts.js","actions/Sort/actions.js","utils/api/categories.js","actions/Category/actions.js","components/NavCategories.js","views/Home.js","components/Bar.js","components/Footer.js","actions/Comment/actions.js","components/EditComment.js","views/PostDetail.js","views/CreatePost.js","views/TrendingNow.js","components/App.js","reducers/Comment/reducers.js","reducers/Post/reducers.js","reducers/index.js","reducers/Category/reducers.js","reducers/Sort/reducers.js","middleware/index.js","index.js"],"names":["ErrorNotFound","react_default","a","createElement","id","class","Typography_default","variant","gutterBottom","style","marginTop","PureComponent","getComments","fetch","concat","headers","Authorization","then","data","json","ADD_POST","RECEIVE_POSTS","GET_POST","VOTE","DELETE_POST","EDIT_POST","GET_POSTS_BY_CATEGORY","postsById","posts","actionType","type","fetchPost","dispatch","PostApi","post","CommentApi","comments","fetchPosts","Promise","all","map","vote","method","Content-Type","body","JSON","stringify","option","deletePost","addPost","editPost","SET_SORTING","setSorting","sortBy","get","categories","RECEIVE_CATEGORIES","CategoryApi","c","receiveCategories","uuidv1","require","NavCategories","this","props","fetchData","classes","className","root","Paper_default","paper","MenuList_default","react_router_dom","to","MenuItem_default","length","category","key","name","path","Component","compose","withStyles","theme","display","float","marginRight","spacing","unit","connect","state","Home","openDialogConfirmDelete","postIdToDelete","submitVote","voteType","_this","handleClickOpenConfirmation","setState","handleCloseConfirmationDelete","e","target","textContent","fetchDataCategories","_this2","location","pathname","substring","Object","values","filter","replace","undefined","find","toLowerCase","components_ErrorNotFound","deleted","title","sort","b","voteScore","timestamp","Card_default","card","CardHeader_default","avatar","Avatar_default","aria-label","charAt","toUpperCase","action","IconButton_default","subheader","CardContent_default","component","author","CardActions_default","actions","disableActionSpacing","onClick","ThumbUp_default","ThumbDown_default","postEditorVisible","marginLeft","Badge_default","color","badgeContent","margin","Message_default","Edit_default","Delete_default","components_NavCategories","Dialog_default","open","aria-labelledby","aria-describedby","DialogTitle_default","DialogActions_default","Button_default","autoFocus","maxWidth","media","height","paddingTop","expand","transform","transition","transitions","create","duration","shortest","expandOpen","backgroundColor","red","flexGrow","paperLeft","width","paperMiddle","paperRight","position","control","padding","sortCriteria","Bar","anchorEl","handleClick","event","currentTarget","handleClose","Boolean","AppBar_default","AppBarNew","Toolbar_default","aria-owns","aria-haspopup","MoreVert_default","Menu_default","onClose","PaperProps","maxHeight","ITEM_HEIGHT","React","newPost","minHeight","AppBarNewTitle","Footer","ADD_COMMENT","RECEIVE_COMMENTS","COMMENT_VOTE","DELETE_COMMENT","SET_COMMENT_SORTING","receiveComments","voteComment","comment","deleteComment","addComment","EditComment","commentAuthor","commentContent","showEditor","handleDelete","handleInputChange","value","defineProperty","handleEditSubmit","preventDefault","parentId","parentDeleted","beginEdit","pos","Date","toDateString","onSubmit","TextField_default","label","textField","onChange","required","multiline","rowsMax","fullWidth","selectAlign","button","minWidth","bullet","fontSize","marginBottom","PostDetail","postTitle","postAuthor","postCategory","postContent","postId","handleSubmit","now","match","params","post_id","handlePostSubmit","history","push","showPostEditor","_this3","keys","k","Grid_default","container","item","xs","Divider_default","sortCommentsBy","components_EditComment","flexWrap","formControl","selectEmpty","dense","menu","setCommentSorting","fetchComments","CreatePost","FormControl_default","InputLabel_default","htmlFor","Select_default","pieOptions","pieHole","slices","legend","alignment","textStyle","tooltip","showColorCode","chartArea","left","top","fontName","TrendingNow","chartImageURI","arrayChartPosts","fetchDataPosts","rowsChartPosts","rowsChartComments","countCommentsByCategory","forEach","postElement","commentCount","index_esm","chartType","options","graph_id","legend_toggle","App","react","components_Bar","react_router","exact","NotFound","components_Footer","handleObj","items","newObj","i","combineReducers","arguments","objectSpread","loadingBar","loadingBarReducer","applyMiddleware","thunk","store","createStore","reducer","middleware","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.de8c62f3.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport '../css/404.css'\n\nclass ErrorNotFound extends PureComponent {\n\n    render() {\n        return (\n            <div id=\"notfound\">\n                <div class=\"notfound\">\n                    <div class=\"notfound-404\">\n                        <h1>Oops!</h1>\n                    </div>\n                    <Typography variant=\"h2\" gutterBottom style={{ marginTop: '40px' }}>404 - Page not found</Typography>\n                    <Typography variant=\"p\" gutterBottom>The page you are looking for might have been removed had its name changed or is temporarily unavailable.</Typography>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default (ErrorNotFound);","export const getComments = (id) =>\n    fetch(`http://localhost:3001/posts/${id}/comments`, { headers: { 'Authorization': 'whatever-you-want' } })\n        .then(data => data.json())\n        .then(data => data)\n\nexport const add = (data) =>\n    fetch(`http://localhost:3001/comments`,\n        {\n            method: 'POST',\n            headers: {\n                'Authorization': 'whatever-you-want',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        })\n        .then(data => data.json())\n\nexport const vote = (id, vote) =>\n    fetch(`http://localhost:3001/comments/${id}`,\n        {\n            method: 'POST',\n            headers: {\n                'Authorization': 'whatever-you-want',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ option: vote })\n        })\n        .then(data => data.json())\n\nexport const deleteComment = (id) =>\n    fetch(`http://localhost:3001/comments/${id}`,\n        {\n            method: 'DELETE',\n            headers: {\n                'Authorization': 'whatever-you-want',\n            }\n        })\n        .then(data => data.json())\n","import * as PostApi from '../../utils/api/posts'\nimport * as CommentApi from '../../utils/api/comments'\n\nexport const ADD_POST = 'ADD_POST'\nexport const RECEIVE_POSTS = 'RECEIVE_POSTS'\nexport const GET_POST = 'GET_POST'\nexport const VOTE = 'VOTE'\nexport const DELETE_POST = 'DELETE_POST'\nexport const EDIT_POST = 'EDIT_POST'\nexport const GET_POSTS_BY_CATEGORY = 'GET_POSTS_BY_CATEGORY'\n\n/* \n The only way to change its state is by dispatching an action. \n It’ll update depending upon the action type and the data passed with the action.\n*/\n\nexport const postsById = (posts, actionType) => ({\n    type: actionType,\n    posts\n})\n\nexport const fetchPost = id => dispatch =>\n    PostApi.fetchPost(id)\n    .then(post =>\n        CommentApi.getComments(post.id)\n        .then(comments => (post.comments = comments))\n        .then(() => post)\n    )\n    .then(post => dispatch(postsById(post, GET_POST)))\n\nexport const fetchPosts = () => dispatch =>\n    PostApi.getPosts()\n    .then(posts =>\n        Promise.all(\n            posts.map(post =>\n                CommentApi.getComments(post.id)\n                .then(comments => (post.comments = comments))\n                .then(() => post)\n            )\n        )\n    )\n    .then(posts => dispatch(postsById(posts, RECEIVE_POSTS)))\n\nexport const vote = (id, vote) => dispatch =>\n    PostApi.vote(id, vote)\n    .then(post =>\n        CommentApi.getComments(post.id)\n        .then(comments => (post.comments = comments))\n        .then(() => post)\n    )\n    .then(post => dispatch(postsById(post, VOTE)))\n\nexport const fetchPostsByCategory = category => dispatch =>\n    PostApi.getPostsByCategory(category)\n    .then(posts =>\n        Promise.all(\n            posts.map(post =>\n                CommentApi.getComments(post.id)\n                .then(comments => (post.comments = comments))\n                .then(() => post)\n            )\n        )\n    )\n    .then(posts => dispatch(postsById(posts, GET_POSTS_BY_CATEGORY)))\n\nexport const deletePost = id => dispatch =>\n    PostApi.deletePost(id)\n    .then(post =>\n        CommentApi.getComments(post.id)\n        .then(comments => (post.comments = comments))\n        .then(() => post)\n    )\n    .then(post => dispatch(postsById(post, DELETE_POST)))\n\nexport const addPost = data => dispatch =>\n    PostApi.add(data)\n    .then(post =>\n        CommentApi.getComments(post.id)\n        .then(comments => (post.comments = comments))\n        .then(() => post)\n    )\n    .then(post => dispatch(postsById(post, ADD_POST)))\n\n\nexport const editPost = (data, id) => dispatch =>\n    PostApi.edit(data, id)\n    .then(post =>\n        CommentApi.getComments(post.id)\n        .then(comments => (post.comments = comments))\n        .then(() => post)\n    )\n    .then(post => dispatch(postsById(post, EDIT_POST)))","export const getPosts = () =>\n    fetch('http://localhost:3001/posts', {\n        headers: {\n            Authorization: 'whatever-you-want'\n        }\n    }).then(data => data.json())\n\nexport const getPostsByCategory = category =>\n    fetch(`http://localhost:3001/${category}/posts`, {\n        headers: {\n            Authorization: 'whatever-you-want'\n        }\n    }).then(data => data.json())\n\nexport const fetchPost = id =>\n    fetch(`http://localhost:3001/posts/${id}`, {\n        headers: {\n            Authorization: 'whatever-you-want'\n        }\n    }).then(data => data.json())\n\nexport const deletePost = id =>\n    fetch(`http://localhost:3001/posts/${id}`, {\n        method: 'DELETE',\n        headers: {\n            Authorization: 'whatever-you-want'\n        }\n    }).then(data => data.json())\n\nexport const vote = (id, vote) =>\n    fetch(`http://localhost:3001/posts/${id}`, {\n        method: 'POST',\n        headers: {\n            Authorization: 'whatever-you-want',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            option: vote\n        })\n    }).then(data => data.json())\n\nexport const add = data =>\n    fetch(`http://localhost:3001/posts`, {\n        method: 'POST',\n        headers: {\n            Authorization: 'whatever-you-want',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n    }).then(data => data.json())\n\nexport const edit = (data, id) =>\n    fetch(`http://localhost:3001/posts/${id}`, {\n        method: 'PUT',\n        headers: {\n            Authorization: 'whatever-you-want',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n    }).then(data => data.json())","export const SET_SORTING = 'SET_SORTING'\n\nexport const setSorting = sortBy => ({\n    type: SET_SORTING,\n    sortBy\n})","export const get = () =>\n    fetch('http://localhost:3001/categories', {\n        headers: {\n            'Authorization': 'whatever-you-want'\n        }\n    })\n    .then(data => data.json())\n    .then(data => data.categories)\n\n\n\nexport const categoryExists = (category) => {\n    var r = Object.keys(get()).find(key => get()[key] === category.toLowerCase()) !== undefined\n    debugger\n    return r;\n}","import * as CategoryApi from '../../utils/api/categories'\nexport const RECEIVE_CATEGORIES = 'RECEIVE_CATEGORIES'\n\n/*\nActions are payloads of information that send data from your application to your store. \nThey are the only source of information for the store. You send them to the store using store.dispatch().\n*/\n\nexport const categories = () =>\n    dispatch =>\n    CategoryApi.get().then(c => dispatch(receiveCategories(c)))\n\n//Actions are plain JavaScript objects.\nexport const receiveCategories = categories => ({\n    type: RECEIVE_CATEGORIES,\n    categories\n})","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport compose from 'recompose/compose'\n\n//Actions\nimport { categories } from '../actions/Category/actions'\n\n//Material Ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        float: 'right',\n    },\n    paper: {\n        marginRight: theme.spacing.unit * 2,\n    }\n});\n\nconst uuidv1 = require('uuid/v1')\n\nclass NavCategories extends Component {\n\n    componentWillMount() {\n        this.props.fetchData()\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div>\n\n                <div className={classes.root}>\n                    <Paper className={classes.paper}>\n                        <MenuList >\n                            <Link to='/'>\n                                <MenuItem>\n                                    All\n                            </MenuItem>\n                            </Link>\n                            {this.props.categories &&\n                                this.props.categories.length > 0 &&\n                                this.props.categories.map(category =>\n                                    <Link key={uuidv1()} to={`/${category.name}`}>\n                                        <MenuItem key={category.path}>\n                                            {category.name}\n                                        </MenuItem>\n                                    </Link>\n                                )\n                            }\n                        </MenuList>\n                    </Paper>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    categories: state.receiveCategories\n})\n\nconst mapDispatchToProps = dispatch => ({\n    dispatch,\n    fetchData: () => dispatch(categories())\n})\n\nexport default compose(\n    withStyles(styles),\n    connect(mapStateToProps, mapDispatchToProps)\n)(NavCategories)","//React / Redux\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport compose from 'recompose/compose'\n\n//Actions\nimport { fetchPosts, vote, deletePost } from '../actions/Post/actions'\nimport { setSorting } from '../actions/Sort/actions'\nimport { categories } from '../actions/Category/actions'\n\n//Material-ui\nimport Card from '@material-ui/core/Card';\nimport { withStyles } from '@material-ui/core/styles';\nimport red from '@material-ui/core/colors/red';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport UnlikeIcon from '@material-ui/icons/ThumbDown'\nimport LikeIcon from '@material-ui/icons/ThumbUp'\nimport Delete from '@material-ui/icons/Delete'\nimport Edit from '@material-ui/icons/Edit'\nimport Badge from '@material-ui/core/Badge';\nimport MessageIcon from '@material-ui/icons/Message';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\n\n//Components\nimport NavCategories from '../components/NavCategories'\nimport NotFound from '../components/ErrorNotFound'\n\nimport '../css/quoteBar.css'\n\nconst uuidv1 = require('uuid/v1')\n\nconst styles = theme => ({\n    card: {\n        maxWidth: 425,\n    },\n    media: {\n        height: 0,\n        paddingTop: '56.25%',\n    },\n    actions: {\n        display: 'flex',\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    avatar: {\n        backgroundColor: red[500],\n    },\n\n    root: {\n        flexGrow: 1,\n    },\n    paperLeft: {\n        height: 100,\n        width: 350,\n    },\n    paperMiddle: {\n        height: 100,\n        width: 350,\n    },\n    paperRight: {\n        height: 100,\n        width: 350,\n        float: 'right',\n        position: 'static'\n    },\n    control: {\n        padding: theme.spacing.unit * 2,\n    },\n    padding: {\n        padding: `0 ${theme.spacing.unit * 1}px`,\n    },\n});\n\n/*\nThe view can subscribe to those events and update itself accordingly.\n*/\n\nclass Home extends Component {\n\n    state = {\n        openDialogConfirmDelete: false,\n        postIdToDelete: ''\n    }\n\n    componentWillMount() {\n        this.props.fetchData('BY_SCORE_HIGHEST')\n        this.props.fetchDataCategories()\n    }\n\n    submitVote = (id, voteType) => {\n        this.props.dispatch(vote(id, voteType))\n    }\n\n    deletePost = id => {\n        this.props.dispatch(deletePost(id))\n    }\n\n    handleClickOpenConfirmation = (id) => {\n        this.setState({ openDialogConfirmDelete: true });\n        this.setState({ postIdToDelete: id });\n    };\n\n    handleCloseConfirmationDelete = (e) => {\n        if (e.target.textContent === \"Yes\") {\n            this.deletePost(this.state.postIdToDelete)\n        }\n\n        this.setState({ openDialogConfirmDelete: false });\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        let posts = this.props.posts;\n        let category = this.props.location.pathname.substring(1);\n        if (category !== '') {\n            posts = [];\n            posts = Object.values(this.props.posts).filter(\n                post => post.category === category\n            )\n        }\n\n        const pathname = this.props.location.pathname.replace('/', '')\n        if (pathname !== '' && this.props.categories) {\n            const categoryFound =\n                (this.props.categories.find(key => key.name === pathname.toLowerCase()) !== undefined)\n\n            if (!categoryFound) {\n                return <NotFound />\n            }\n        }\n\n        return (\n\n            <div className=\"container\">\n\n                <div className=\"b1\">\n                    <div className=\"main-container\">\n                        <div className=\"second-container share\">\n                            <h2><span>R</span><span>e</span><span>a</span><span>d</span><span>a</span><span>b</span><span>l</span><span>e</span></h2>\n                        </div>\n                        <div className=\"first-container share\">\n                            <h1>\n                                <span id=\"one\">W</span>\n                                <span>h</span><span>e</span><span>n</span> <span>W</span><span>e</span> <span>T</span><span>a</span>\n                                <span>l</span>\n                                <span>k</span>\n                            </h1>\n                        </div>\n                        <div className=\"second-container share\">\n                            <h1><span>W</span><span>e</span> <span>M</span><span>o</span><span>v</span><span>e</span></h1>\n                        </div>\n\n                    </div>\n                </div>\n                <div className=\"b2\" >\n                    {posts &&\n                        Object.values(posts)\n                            .filter(post => !post.deleted)\n                            .filter(post => post.title)\n                            .sort((a, b) => {\n                                switch (this.props.sortBy) {\n                                    case 'BY_SCORE_LOWEST':\n                                        return a.voteScore - b.voteScore\n                                    case 'BY_DATE_OLDEST':\n                                        return a.timestamp - b.timestamp\n                                    case 'BY_DATE_NEWEST':\n                                        return b.timestamp - a.timestamp\n                                    default:\n                                        return b.voteScore - a.voteScore\n                                }\n                            })\n                            .map(post =>\n                                <div className='card' key={uuidv1()}>\n                                    <Card className={classes.card}>\n                                        <CardHeader\n                                            avatar={\n                                                <Avatar aria-label=\"Recipe\" className={classes.avatar}>\n                                                    {post.category && post.category.charAt(0).toUpperCase() + post.category.charAt(1)}\n                                                </Avatar>\n                                            }\n                                            action={\n                                                <IconButton>\n                                                </IconButton>\n                                            }\n                                            title={post.title}\n                                            subheader={post.category}\n                                        />\n\n                                        <CardContent>\n                                            <Typography component=\"p\">\n                                                Author: {post.author}\n                                            </Typography>\n                                            <br />\n                                            <br />\n\n                                        </CardContent>\n                                        <CardActions className={classes.actions} disableActionSpacing>\n                                            {post.voteScore}\n                                            <div onClick={() => this.submitVote(post.id, 'upVote')}>\n                                                <IconButton aria-label=\"Love this\">\n                                                    <LikeIcon />\n                                                </IconButton>\n                                            </div>\n                                            <div onClick={() => this.submitVote(post.id, 'downVote')}>\n                                                <IconButton aria-label=\"Hate this\">\n                                                    <UnlikeIcon />\n                                                </IconButton>\n                                            </div>\n\n                                            <Link\n                                                to={{\n                                                    pathname: `/${post.category}/${post.id}`,\n                                                    state: { postEditorVisible: true }\n                                                }}\n                                                style={{ marginLeft: 25 }}>\n                                                <Badge color=\"primary\" badgeContent={post.comments && post.comments.length} className={classes.margin}>\n                                                    <MessageIcon />\n                                                </Badge>\n                                            </Link>\n\n                                            <Link\n                                                to={{\n                                                    pathname: `/${post.category}/${post.id}`,\n                                                    state: { postEditorVisible: true }\n                                                }}\n                                                style={{ marginLeft: 25 }}>\n                                                <IconButton aria-label=\"Edit\">\n                                                    <Edit />\n                                                </IconButton>\n                                            </Link>\n\n                                            <div onClick={() => this.handleClickOpenConfirmation(post.id)}\n                                                style={{ marginLeft: 0 }}>\n                                                <IconButton aria-label=\"Delete\">\n                                                    <Delete />\n                                                </IconButton>\n                                            </div>\n                                        </CardActions>\n                                    </Card>\n                                    <br />\n                                </div>\n                            )}\n                </div>\n                <div className=\"b3\">\n                    <NavCategories sortBy={this.props.sortBy} />\n                </div>\n\n                <Dialog\n                    open={this.state.openDialogConfirmDelete}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\">\n                    <DialogTitle id=\"alert-dialog-title\">{\"Delete this post?\"}</DialogTitle>\n                    <DialogActions>\n                        <Button id=\"delete-no\" onClick={this.handleCloseConfirmationDelete} color=\"primary\">\n                            No\n                        </Button>\n                        <Button id=\"delete-yes\" onClick={this.handleCloseConfirmationDelete} color=\"primary\" autoFocus>\n                            Yes\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    posts: state.postsById,\n    sortBy: state.setSorting ? state.setSorting.sort : '',\n    categories: state.receiveCategories\n})\n\nconst mapDispatchToProps = dispatch => ({\n    dispatch,\n    fetchData: sortCriteria =>\n        dispatch(fetchPosts()).then(() => dispatch(setSorting(sortCriteria))),\n    fetchDataCategories: () => dispatch(categories())\n})\n\nexport default compose(\n    withStyles(styles),\n    connect(mapStateToProps, mapDispatchToProps)\n)(Home)","import React from 'react';\nimport { Link } from 'react-router-dom'\n\n//Material ui\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nimport '../css/quoteBar.css'\n\nconst styles = {\n    root: {\n        flexGrow: 1,\n\n    },\n    newPost: {\n        marginLeft: 100,\n    },\n    AppBarNew: {\n        backgroundColor: 'rgba(74, 78, 73, 0.87)',\n        minHeight: '35px',\n    },\n\n    AppBarNewTitle: {\n        color: 'white !important'\n    }\n};\n\nconst ITEM_HEIGHT = 48;\n\nclass Bar extends React.Component {\n    state = {\n        anchorEl: null,\n    };\n\n    handleClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div className={classes.root}>\n                <AppBar position=\"static\" className={classes.AppBarNew}>\n                    <Toolbar className='AppBarNewToolBar'>\n\n                        <div>\n                            <IconButton\n                                aria-label=\"More\"\n                                aria-owns={open ? 'long-menu' : undefined}\n                                aria-haspopup=\"true\"\n                                onClick={this.handleClick}>\n                                <MoreVertIcon />\n                            </IconButton>\n                            <Menu\n                                id=\"long-menu\"\n                                anchorEl={anchorEl}\n                                open={open}\n                                onClose={this.handleClose}\n                                PaperProps={{\n                                    style: {\n                                        maxHeight: ITEM_HEIGHT * 4.5,\n                                        width: 200,\n                                    },\n                                }}>\n\n                                <MenuItem key='home' onClick={this.handleClose}>\n                                    <Link to='/'>\n                                        Home\n                                        </Link>\n                                </MenuItem>\n\n                                <Link to='/create-post'>\n                                    <MenuItem key='createPost' onClick={this.handleClose}>\n                                        Create a new post\n                                    </MenuItem>\n                                </Link>\n                                <Link to='/trending-now'>\n                                    <MenuItem key='createPost' onClick={this.handleClose}>\n                                        Trending Now\n                                    </MenuItem>\n                                </Link>\n\n                            </Menu>\n                        </div>\n                    </Toolbar>\n                </AppBar>\n                <br />\n            </div>\n        );\n    }\n}\n\n\n\n\nexport default withStyles(styles)(Bar);","\nimport React, { PureComponent } from 'react';\nimport '../css/footer.css'\n\nclass Footer extends PureComponent {\n\n    render() {\n        return (\n            <div className=\"footerMaster\" >\n                <div className=\"footer\">Readable - Udacity</div>\n            </div >\n        );\n    }\n}\n\nexport default (Footer);","import * as CommentApi from '../../utils/api/comments'\n\nexport const ADD_COMMENT = 'ADD_COMMENT'\nexport const RECEIVE_COMMENTS = 'RECEIVE_COMMENTS'\nexport const COMMENT_VOTE = 'COMMENT_VOTE'\nexport const DELETE_COMMENT = 'DELETE_COMMENT'\nexport const SET_COMMENT_SORTING = 'SET_COMMENT_SORTING'\n\nexport const setCommentSorting = sortCommentsBy => ({\n    type: SET_COMMENT_SORTING,\n    sortCommentsBy\n})\n\nexport const receiveComments = (comments, actionType) => ({\n    type: actionType,\n    comments\n})\n\nexport const fetchComments = id => dispatch =>\n    CommentApi.getComments(id).then(comments =>\n        dispatch(receiveComments(comments, RECEIVE_COMMENTS))\n    )\n\nexport const voteComment = (id, vote) => dispatch =>\n    CommentApi.vote(id, vote).then(comment =>\n        dispatch(receiveComments(comment, COMMENT_VOTE))\n    )\n\nexport const deleteComment = id => dispatch =>\n    CommentApi.deleteComment(id).then(comment =>\n        dispatch(receiveComments(comment, DELETE_COMMENT))\n    )\n\nexport const addComment = data => dispatch =>\n    CommentApi.add(data).then(comment =>\n        dispatch(receiveComments(comment, ADD_COMMENT))\n    )","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport compose from 'recompose/compose'\n\n//Actions\nimport { addComment, voteComment, deleteComment } from '../actions/Comment/actions'\n\n//Material UI\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport Edit from '@material-ui/icons/Edit'\nimport Delete from '@material-ui/icons/Delete'\nimport TextField from '@material-ui/core/TextField';\nimport UnlikeIcon from '@material-ui/icons/ThumbDown'\nimport LikeIcon from '@material-ui/icons/ThumbUp'\n\n\nconst styles = {\n    card: {\n        minWidth: 275,\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n};\n\nclass EditComment extends Component {\n\n    state = {\n        commentAuthor: '',\n        commentContent: '',\n        showEditor: false\n    }\n\n    componentDidMount() {\n        this.setState({\n            commentAuthor: this.props.author,\n            commentContent: this.props.body\n        })\n    }\n\n    submitVote = (id, voteType) => {\n        this.props.dispatch(voteComment(id, voteType))\n    }\n\n    handleDelete = id => {\n        this.props.dispatch(deleteComment(id))\n    }\n\n    handleInputChange = event => {\n        const target = event.target\n        const value = target.value\n        const name = target.name\n\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleEditSubmit = event => {\n        event.preventDefault()\n        const data = {\n            id: this.props.id,\n            timestamp: this.props.timestamp,\n            body: this.state.commentContent,\n            author: this.state.commentAuthor,\n            parentId: this.props.parentId,\n            voteScore: this.props.voteScore,\n            deleted: this.props.deleted,\n            parentDeleted: false\n        }\n\n        this.props.dispatch(addComment(data))\n    }\n\n    beginEdit = () => {\n        this.setState({\n            showEditor: true\n        })\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n\n            <div>\n                <Card className={classes.card}>\n                    <CardContent>\n                        <div key={this.props.id}>\n\n                            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                                By: {this.props.author}\n                            </Typography>\n                            <Typography className={classes.pos} color=\"textSecondary\">\n                                {new Date(this.props.timestamp).toDateString()}\n                            </Typography>\n                            <Typography component=\"p\">\n                                {this.props.body}{' '}\n                                <br />\n                                <br />\n                                <br />\n                            </Typography>\n                            <CardActions>\n                                <IconButton aria-label=\"Edit\" onClick={this.beginEdit}>\n                                    <Edit />\n                                </IconButton>\n                                <div onClick={() => this.handleDelete(this.props.id)}>\n                                    <IconButton aria-label=\"Delete\">\n                                        <Delete />\n                                    </IconButton>\n                                </div>\n                                <div>\n                                    {this.props.voteScore}{' '}\n\n                                    <IconButton aria-label=\"Love this\" onClick={() => this.submitVote(this.props.id, 'upVote')}>\n                                        <div >\n                                            <LikeIcon />\n                                        </div>\n                                    </IconButton>\n                                    <IconButton aria-label=\"Love this\" onClick={() => this.submitVote(this.props.id, 'downVote')}>\n                                        <div >\n                                            <UnlikeIcon />\n                                        </div>\n                                    </IconButton>\n                                </div>\n\n                            </CardActions>\n\n                            {this.state.showEditor &&\n\n                                <form onSubmit={this.handleEditSubmit} className={classes.root}>\n                                    <div style={{ width: 270, float: 'left', marginRight: 0 }}>\n                                        <TextField\n                                            id='comment-author'\n                                            label=\"Author\"\n                                            name='commentAuthor'\n                                            className={classes.textField}\n                                            value={this.state.commentAuthor}\n                                            onChange={this.handleInputChange}\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            required='required'\n                                        />\n\n                                        <TextField\n                                            id='comment-content'\n                                            label=\"Content\"\n                                            name='commentContent'\n                                            className={classes.textField}\n                                            value={this.state.commentContent}\n                                            onChange={this.handleInputChange}\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            required='required'\n                                            multiline\n                                            rowsMax=\"4\"\n                                            fullWidth\n                                        />\n\n                                        <div className={classes.selectAlign}>\n                                            <Button variant=\"contained\" type='submit' className={classes.button}>\n                                                Save Comment\n                                            </Button>\n                                        </div>\n                                        <br />\n                                    </div>\n                                </form>\n                            }\n                        </div>\n                    </CardContent>\n\n                </Card>\n                <br />\n            </div>\n        )\n    }\n}\n\nexport default compose(\n    withStyles(styles),\n    connect()\n)(EditComment)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport compose from 'recompose/compose'\n\n//Actions\nimport { editPost, fetchPost, deletePost, vote } from '../actions/Post/actions'\nimport { fetchComments, addComment, setCommentSorting } from '../actions/Comment/actions'\n\n//Components\nimport EditComment from '../components/EditComment'\nimport NotFound from '../components/ErrorNotFound'\n\n//Material ui\nimport { withStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport UnlikeIcon from '@material-ui/icons/ThumbDown'\nimport LikeIcon from '@material-ui/icons/ThumbUp'\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Delete from '@material-ui/icons/Delete'\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst uuidv1 = require('uuid/v1')\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    formControl: {\n        margin: theme.spacing.unit,\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing.unit * 2,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n    },\n    dense: {\n        marginTop: 16,\n    },\n    menu: {\n        width: 200,\n    },\n    selectAlign: {\n        marginLeft: 10\n    }\n});\n\nclass PostDetail extends Component {\n\n    state = {\n        commentAuthor: '',\n        commentContent: '',\n        postEditorVisible: false,\n        postTitle: '',\n        postAuthor: '',\n        postCategory: '',\n        postContent: '',\n        postId: '',\n        openDialogConfirmDelete: false\n    }\n\n    componentWillMount() {\n        this.props\n            .fetchData(this.props.match.params.post_id, 'BY_SCORE_HIGHEST')\n            .then(\n                () =>\n                    this.props.location.state &&\n                    this.props.location.state.postEditorVisible &&\n                    this.showPostEditor()\n            )\n\n    }\n\n    showPostEditor() {\n        this.setState({\n            postTitle: this.props.post[this.props.match.params.post_id].title,\n            postAuthor: this.props.post[this.props.match.params.post_id].author,\n            postCategory: this.props.post[this.props.match.params.post_id].category,\n            postContent: this.props.post[this.props.match.params.post_id].body,\n            postEditorVisible: true,\n            postId: this.props.match.params.post_id\n        })\n    }\n\n    submitVote = (id, voteType) => {\n        this.props.dispatch(vote(id, voteType))\n    }\n\n    handleInputChange = event => {\n        const target = event.target\n        const value = target.value\n        const name = target.name\n\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleSubmit = event => {\n        event.preventDefault()\n        const data = {\n            id: uuidv1(),\n            timestamp: Date.now(),\n            body: this.state.commentContent,\n            author: this.state.commentAuthor,\n            parentId: this.props.match.params.post_id,\n            voteScore: 0,\n            deleted: false,\n            parentDeleted: false\n        }\n\n        this.props.dispatch(addComment(data))\n\n        this.setState({\n            commentContent: '',\n            commentAuthor: ''\n        });\n\n    }\n\n    handlePostSubmit = event => {\n        event.preventDefault()\n        const data = {\n            id: this.props.post[this.props.match.params.post_id].id,\n            timestamp: this.props.post[this.props.match.params.post_id].timestamp,\n            title: this.state.postTitle,\n            body: this.state.postContent,\n            author: this.state.postAuthor,\n            category: this.state.postCategory,\n            voteScore: this.props.post[this.props.match.params.post_id].voteScore,\n            deleted: this.props.post[this.props.match.params.post_id].deleted\n        }\n        this.props.dispatch(editPost(data, data.id))\n    }\n\n    deletePost = id => {\n        this.props.dispatch(deletePost(id))\n        this.props.history.push('/')\n    }\n\n    handleClickOpenConfirmation = () => {\n        this.setState({ openDialogConfirmDelete: true });\n\n    };\n\n    handleCloseConfirmationDelete = (e) => {\n        if (e.target.textContent === \"Yes\") {\n            this.deletePost(this.state.postId);\n        }\n\n        this.setState({ openDialogConfirmDelete: false });\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        if ((Object.keys(this.props.post)[0] === 'undefined' || Object.keys(this.props.post) === undefined)) {\n            if (Object.keys(this.props.post).length > 1) {\n                //ok\n            } else {\n                return <NotFound />\n            }\n        }\n\n        return (\n            <div style={{ marginBottom: '1000px' }}>\n\n                {this.props.post &&\n                    Object.keys(this.props.post).map(\n                        k =>\n                            k === this.props.match.params.post_id &&\n                            !this.props.post[k].deleted &&\n                            <div key={k}>\n\n\n                                <Typography variant=\"h5\" gutterBottom>\n                                    {this.props.post[k].title}\n                                    <br />\n                                    {' '}\n\n                                    <Grid container spacing={24}>\n                                        <Grid item xs={1} style={{ float: 'right' }}>\n                                            {this.props.post[k].voteScore}{' '}\n                                        </Grid>\n                                        <div onClick={() => this.submitVote(k, 'upVote')}>\n                                            <IconButton aria-label=\"Love this\">\n                                                <LikeIcon />\n                                            </IconButton>\n                                        </div>\n                                        <div onClick={() => this.submitVote(k, 'downVote')}>\n                                            <IconButton aria-label=\"Hate this\">\n                                                <UnlikeIcon />\n                                            </IconButton>\n                                        </div>\n                                        <div onClick={() => this.handleClickOpenConfirmation(this.state.postId)}\n                                            style={{ marginLeft: 0 }}>\n                                            <IconButton aria-label=\"Delete\">\n                                                <Delete />\n                                            </IconButton>\n                                        </div>\n                                    </Grid>\n\n                                </Typography>\n\n                                <Divider variant=\"middle\" />\n                                {\n                                    this.state.postEditorVisible &&\n                                    <div style={{ width: '20%', float: 'left' }}>\n\n                                        <Typography variant=\"h6\" gutterBottom></Typography>\n\n                                        <form onSubmit={this.handlePostSubmit} className={classes.root}>\n\n                                            <TextField\n                                                id='post-title'\n                                                label=\"Title\"\n                                                name='postTitle'\n                                                className={classes.textField}\n                                                value={this.state.postTitle}\n                                                onChange={this.handleInputChange}\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                required\n                                            />\n\n                                            <TextField\n                                                id='post-author'\n                                                label=\"Author\"\n                                                name='postAuthor'\n                                                className={classes.textField}\n                                                value={this.state.postAuthor}\n                                                onChange={this.handleInputChange}\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                required\n                                            />\n\n                                            <TextField\n                                                id='post-content'\n                                                label=\"Content\"\n                                                name='postContent'\n                                                multiline\n                                                rowsMax=\"4\"\n                                                className={classes.textField}\n                                                value={this.state.postContent}\n                                                onChange={this.handleInputChange}\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                required\n                                            />\n                                            <br />\n                                            <div className={classes.selectAlign}>\n                                                <Button variant=\"contained\" type='submit' className={classes.button}>\n                                                    Save\n                                                </Button>\n                                            </div>\n                                        </form>\n                                    </div>\n                                }\n\n                                <div style={{ width: '400', float: 'left', marginLeft: 50 }}>\n                                    <h2>\n                                        Comments (\n                                        {this.props.comments &&\n                                            Object.values(this.props.comments)\n                                                .filter(comment => !comment.deleted)\n                                                .filter(comment => comment.parentId === this.state.postId).length}\n                                        )\n                                    </h2>\n                                    {this.props.comments &&\n                                        Object.values(this.props.comments)\n                                            .filter(comment => !comment.deleted)\n                                            .filter(comment => comment.parentId === this.state.postId)\n                                            .sort((a, b) => {\n                                                switch (this.props.sortCommentsBy) {\n                                                    case 'BY_SCORE_LOWEST':\n                                                        return a.voteScore - b.voteScore\n                                                    case 'BY_DATE_OLDEST':\n                                                        return a.timestamp - b.timestamp\n                                                    case 'BY_DATE_NEWEST':\n                                                        return b.timestamp - a.timestamp\n                                                    default:\n                                                        return b.voteScore - a.voteScore\n                                                }\n                                            })\n                                            .map(comment =>\n\n                                                <EditComment\n                                                    key={comment.id}\n                                                    id={comment.id}\n                                                    timestamp={comment.timestamp}\n                                                    body={comment.body}\n                                                    author={comment.author}\n                                                    parentId={comment.parentId}\n                                                    voteScore={comment.voteScore}\n                                                    deleted={comment.deleted}\n                                                    parentDeleted={comment.parentDeleted}\n                                                />\n                                            )}\n\n\n                                    <div style={{ width: '30%' }}>\n                                        <Typography variant=\"h6\" gutterBottom>New comment</Typography>\n\n                                        <form id=\"newcomment-form\" onSubmit={this.handleSubmit} className={classes.root}>\n\n                                            <TextField\n                                                id='comment-author'\n                                                label=\"Author\"\n                                                name='commentAuthor'\n                                                className={classes.textField}\n                                                value={this.state.commentAuthor}\n                                                onChange={this.handleInputChange}\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                required\n                                            />\n                                            <TextField\n                                                id='comment-content'\n                                                label=\"Content\"\n                                                name='commentContent'\n                                                className={classes.textField}\n                                                value={this.state.commentContent}\n                                                onChange={this.handleInputChange}\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                required\n                                            />\n\n                                            <div className={classes.selectAlign}>\n                                                <Button variant=\"contained\" type='submit' className={classes.button}>\n                                                    Save\n                                                </Button>\n                                            </div>\n                                        </form>\n                                    </div>\n                                    <br />\n                                </div>\n                            </div>\n                    )\n                }\n\n                <Dialog\n                    open={this.state.openDialogConfirmDelete}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\">\n                    <DialogTitle id=\"alert-dialog-title\">{\"Delete this post?\"}</DialogTitle>\n                    <DialogActions>\n                        <Button id=\"delete-no\" onClick={this.handleCloseConfirmationDelete} color=\"primary\">\n                            No\n                        </Button>\n                        <Button id=\"delete-yes\" onClick={this.handleCloseConfirmationDelete} color=\"primary\" autoFocus>\n                            Yes\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n\n            </div >\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    post: state.postsById,\n    comments: state.receiveComments,\n    sortCommentsBy: state.setCommentSorting ? state.setCommentSorting.sort : ''\n})\n\nconst mapDispatchToProps = dispatch => ({\n    dispatch,\n    fetchData: (id, sortCriteria) =>\n        dispatch(fetchPost(id))\n            .then(() => dispatch(fetchComments(id)))\n            .then(() => dispatch(setCommentSorting(sortCriteria)))\n})\n\nexport default compose(\n    withStyles(styles),\n    connect(mapStateToProps, mapDispatchToProps)\n)(PostDetail)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport compose from 'recompose/compose'\n\n//Actions\nimport { addPost } from '../actions/Post/actions'\n\n//Material ui\nimport { withStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\n\nconst uuidv1 = require('uuid/v1')\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    formControl: {\n        margin: theme.spacing.unit,\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing.unit * 2,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n\n    },\n    dense: {\n        marginTop: 16,\n    },\n    menu: {\n        width: 200,\n    },\n    selectAlign: {\n        marginLeft: 10\n    }\n});\n\nclass CreatePost extends Component {\n    state = {\n        postTitle: '',\n        postAuthor: '',\n        postCategory: 'react',\n        postContent: ''\n    }\n\n    handleInputChange = event => {\n        const target = event.target\n        const value = target.value\n        const name = target.name\n\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleSubmit = event => {\n        event.preventDefault()\n        const data = {\n            id: uuidv1(),\n            timestamp: Date.now(),\n            title: this.state.postTitle,\n            body: this.state.postContent,\n            author: this.state.postAuthor,\n            category: this.state.postCategory,\n            voteScore: 0,\n            deleted: false\n        }\n        this.props.dispatch(addPost(data))\n        this.props.history.push('/')\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div style={{ width: '15%', height: '100%', float: 'left', position: 'fixed' }}>\n\n                < FormControl className={classes.formControl} >\n                    <Typography variant=\"h6\" gutterBottom>Compose new Post</Typography>\n                    <form onSubmit={this.handleSubmit} className={classes.root}>\n                        <TextField\n                            id='post-title'\n                            label=\"Title\"\n                            name='postTitle'\n                            className={classes.textField}\n                            value={this.state.postTitle}\n                            onChange={this.handleInputChange}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            required\n                        />\n                        <TextField\n                            id='post-author'\n                            label=\"Author\"\n                            name='postAuthor'\n                            className={classes.textField}\n                            value={this.state.postAuthor}\n                            onChange={this.handleInputChange}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            required\n                        />\n                        <div className={classes.selectAlign}>\n                            <InputLabel htmlFor=\"post-category\"></InputLabel>\n                            <Select\n                                name='postCategory'\n                                id='post-category'\n                                value={this.state.postCategory}\n                                onChange={this.handleInputChange}\n                                required>\n                                <MenuItem value='react'>React</MenuItem>\n                                <MenuItem value='redux'>Redux</MenuItem>\n                                <MenuItem value='udacity'>Udacity</MenuItem>\n                            </Select>\n                        </div>\n                        <TextField\n                            id='post-content'\n                            label=\"Content\"\n                            name='postContent'\n                            multiline\n                            rowsMax=\"4\"\n                            className={classes.textField}\n                            value={this.state.postContent}\n                            onChange={this.handleInputChange}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            required\n                        />\n                        <br />\n                        <div className={classes.selectAlign}>\n                            <Button variant=\"contained\" type='submit' className={classes.button}>\n                                Post\n                                </Button>\n                        </div>\n                    </form>\n                </ FormControl >\n\n            </div>\n\n        )\n    }\n}\n\nexport default compose(\n    withStyles(styles),\n    connect()\n)(CreatePost)","//React / Redux\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport compose from 'recompose/compose'\n\n//Actions\nimport { fetchPosts, } from '../actions/Post/actions'\nimport { setSorting } from '../actions/Sort/actions'\nimport { categories } from '../actions/Category/actions'\n\n//Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\n//react-google-charts\nimport Chart from \"react-google-charts\";\n\nconst styles = theme => ({\n\n});\n\nconst pieOptions = {\n    title: \"Posts\",\n    pieHole: 1.9,\n    slices: [\n        {\n            color: \"#2BB673\"\n        },\n        {\n            color: \"#d91e48\"\n        },\n        {\n            color: \"#007fad\"\n        },\n        {\n            color: \"#e9a227\"\n        }\n    ],\n    legend: {\n        position: \"bottom\",\n        alignment: \"center\",\n        textStyle: {\n            color: \"233238\",\n            fontSize: 14\n        }\n    },\n    tooltip: {\n        showColorCode: true\n    },\n    chartArea: {\n        left: 0,\n        top: 10,\n\n        width: \"100%\",\n        height: \"75%\"\n    },\n    fontName: \"Roboto\"\n};\n\n/*\nThe view can subscribe to those events and update itself accordingly.\n*/\n\nclass TrendingNow extends Component {\n    state = {\n        chartImageURI: \"\",\n        arrayChartPosts: []\n    };\n\n    componentWillMount() {\n        this.props.fetchData()\n        this.props.fetchDataPosts('BY_SCORE_HIGHEST')\n    }\n\n    render() {\n\n        let rowsChartPosts = [[\"Category\", \"Posts\"]];\n\n        if (this.props.categories !== null && Object.values(this.props.posts).length > 0) {\n            this.props.categories.map(category =>\n                rowsChartPosts.push([category.name, Object.values(this.props.posts)\n                    .filter(post => !post.deleted)\n                    .filter(\n                        post => post.category === category.name\n                    ).length])\n            );\n        }\n\n        let rowsChartComments = [[\"Category\", \"Comments\"]];\n        if (this.props.categories !== null && Object.values(this.props.posts).length > 0) {\n            let countCommentsByCategory = 0;\n\n            this.props.categories.map(category =>\n                rowsChartComments.push([category.name, 0])\n            );\n\n            Object.values(this.props.categories).forEach(category => {\n                Object.values(this.props.posts)\n                    .filter(post => !post.deleted)\n                    .filter(\n                        post => post.category === category.name\n                    ).forEach(postElement => {\n                        countCommentsByCategory += postElement.commentCount\n                    })\n\n                rowsChartComments.push([category.name, countCommentsByCategory])\n                countCommentsByCategory = 0;\n            });\n        }\n\n        return (\n\n            <div style={{\n                width: '100%',\n                height: '100%',\n                float: 'left',\n\n            }}>\n\n                <div className=\"container\">\n                    <div className=\"b1-trends\">\n                    </div>\n                    <div className=\"b2-trends\">\n                        <Typography variant=\"h6\" gutterBottom className='chartBoxTitle'>Posts Trends for you</Typography>\n                        <Chart\n                            chartType=\"PieChart\"\n                            data={rowsChartPosts}\n                            options={pieOptions}\n                            graph_id=\"PieChart1\"\n                            width={\"100%\"}\n                            height={\"350px\"}\n                            legend_toggle\n                            className='chartBox'\n                        />\n                    </div>\n                    <div className=\"b1-trends\">\n\n\n                    </div>\n                    <div className=\"b2-trends\">\n                        <Typography variant=\"h6\" gutterBottom className='chartBoxTitle'>Comments Trends for you</Typography>\n                        <div className=\"b2-trends-chart2\">\n                            <Chart\n                                chartType=\"PieChart\"\n                                data={rowsChartComments}\n                                options={pieOptions}\n                                graph_id=\"PieChart2\"\n                                width={\"100%\"}\n                                height={\"350px\"}\n                                legend_toggle\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    categories: state.receiveCategories,\n    posts: state.postsById,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    dispatch,\n    fetchData: () => dispatch(categories()),\n    fetchDataPosts: sortCriteria =>\n        dispatch(fetchPosts()).then(() => dispatch(setSorting(sortCriteria)))\n})\n\nexport default compose(\n    withStyles(styles),\n    connect(mapStateToProps, mapDispatchToProps)\n)(TrendingNow)","import React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\n//Components\nimport NotFound from '../components/ErrorNotFound'\nimport Home from '../views/Home'\nimport Bar from '../components/Bar'\nimport Footer from '../components/Footer'\n\n//Views\nimport PostDetail from '../views/PostDetail'\nimport CreatePost from '../views/CreatePost'\nimport TrendingNow from '../views/TrendingNow'\n\n//Css\nimport '../css/index.css'\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Router>\n        <Fragment>\n          <div className='container'>\n\n            <Bar />\n            <Switch>\n              <Route path=\"/\" exact component={Home} />\n              <Route path=\"/Home\" exact component={Home} />\n              <Route path='/create-post' exact component={CreatePost} />\n              <Route path='/:category/:post_id' exact component={PostDetail} />\n              <Route path='/trending-now' exact component={TrendingNow} />\n              <Route path='/:category' exact component={Home} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n\n          <Footer />\n        </Fragment>\n      </Router>\n    );\n  }\n}\n\nexport default connect(null, null)(App)","import {\n    RECEIVE_COMMENTS,\n    COMMENT_VOTE,\n    ADD_COMMENT,\n    DELETE_COMMENT,\n    SET_COMMENT_SORTING\n} from '../../actions/Comment/actions'\n\nexport function setCommentSorting(state = null, action) {\n    switch (action.type) {\n        case SET_COMMENT_SORTING:\n            return {\n                ...state,\n                sort: action.sortCommentsBy\n            }\n        default:\n            return state\n    }\n}\n\nexport function receiveComments(state = {}, action) {\n    switch (action.type) {\n        case RECEIVE_COMMENTS:\n            return {\n                ...state,\n                ...handleObj(action.comments)\n            }\n\n        case ADD_COMMENT:\n        case COMMENT_VOTE:\n        case DELETE_COMMENT:\n            return {\n                ...state,\n                ...handleObj([action.comments])\n            }\n\n        default:\n            return state\n    }\n}\n\nfunction handleObj(items) {\n    const newObj = {}\n    for (let i = 0; i < items.length; i++) {\n        const item = items[i]\n        const itemId = item.id\n        newObj[itemId] = item\n    }\n    return newObj\n}","import {\n    GET_POST,\n    GET_POSTS_BY_CATEGORY,\n    RECEIVE_POSTS,\n    VOTE,\n    ADD_POST,\n    DELETE_POST,\n    EDIT_POST\n} from '../../actions/Post/actions'\n//import { handleObj } from '../../utils/helpers/handleObj'\n\nexport function postsById(state = {}, action) {\n    switch (action.type) {\n        case RECEIVE_POSTS:\n        case GET_POSTS_BY_CATEGORY:\n            return {\n                ...state,\n                ...handleObj(action.posts)\n            }\n\n        case GET_POST:\n        case VOTE:\n        case ADD_POST:\n        case DELETE_POST:\n        case EDIT_POST:\n            return {\n                ...state,\n                ...handleObj([action.posts])\n            }\n\n        default:\n            return state\n    }\n}\n\nfunction handleObj(items) {\n    const newObj = {}\n    for (let i = 0; i < items.length; i++) {\n        const item = items[i]\n        const itemId = item.id\n        newObj[itemId] = item\n    }\n    return newObj\n}","import { combineReducers } from 'redux'\nimport { loadingBarReducer } from 'react-redux-loading'\nimport { receiveCategories } from './Category/reducers'\nimport { receiveComments, setCommentSorting } from './Comment/reducers'\nimport { setSorting } from './Sort/reducers'\nimport { postsById } from './Post/reducers'\n\nexport default combineReducers({\n    receiveCategories,\n    receiveComments,\n    setSorting,\n    postsById,\n    setCommentSorting,\n    loadingBar: loadingBarReducer,\n})","import { RECEIVE_CATEGORIES } from '../../actions/Category/actions'\n\n/*\nChanges are made with pure functions.\n\nReducers are just pure functions that take the previous state and an action, and return the next state. \n\nReducers specify how the application's state changes in response to actions sent to the store.\n-Remember that actions only describe what happened, but don't describe how the application's state changes.\n\n*/\n\nexport function receiveCategories(state = null, action) {\n    switch (action.type) {\n        case RECEIVE_CATEGORIES:\n            return action.categories\n        default:\n            return state\n    }\n}","import {\n    SET_SORTING\n} from '../../actions/Sort/actions'\n\nexport function setSorting(state = null, action) {\n    switch (action.type) {\n        case SET_SORTING:\n            return {\n                ...state,\n                sort: action.sortBy\n            }\n        default:\n            return state\n    }\n}","import thunk from 'redux-thunk'\nimport {\n    applyMiddleware\n} from 'redux'\n\nexport default applyMiddleware(\n    thunk\n)","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './css/index.css'\nimport App from './components/App'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport reducer from './reducers'\nimport middleware from './middleware'\n\nconst store = createStore(reducer, middleware)\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n)"],"sourceRoot":""}